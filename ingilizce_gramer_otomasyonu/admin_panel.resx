<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA5ZJREFUaEPtmVmoD1Ecx699T3ZPSsiayJ6dJ1sehO4TipQXD0JIliISb3YKKZHt
        wRpeELK92SmRfStbdr6fM/+puX935n/OzH/m3of/pz7d8zv3PzNnzjlzzpkzZSVKlCgRpLucKdfJ/fKY
        PJ5LkzdL8psastrQTa6Xz+TfnF/lXXk9J2ny/P8/lxskN1NldJFH5G/5XR6WM2RHWVPmQ613kPzmkPwm
        /8ijsqvMjNpyuaTQH3LpltKVFnKZfC8510rJuVOllTwv6QZ7ZGuZFM65S3LOC7KNTIV28p78LMvJKDJT
        Jed+INuTUUyo6fuS5h5ERkoMkG/lQ1m0lqBfXpTUzkAyUqa//CQvyTpkJGWVpH9OMVE2TJJcc42JEtBD
        /pA7TZQt2+RP2dNEMTkh6ZMMeVnTTL6Wp0wUg96SiWaRicJh6FviJZ2YLy97yVAWSLpSXxM5skl+kU1N
        FM5GyUWY0Gzhhjlmu4nCaSJ5oLeayIFakq6z10TRsGzYIW1vwi/8bsl1CsGEyYzvNEv3k1zEduRhnUOL
        cUzUyEG34Tf7pE3hYbLkGKchfK7koLYmsqNQS7jWvA9LDY6bZyJLtki6kCthLRGs+TgLtpey0PNSAV5E
        rnlJZ/Jbwq95+rJLzQdhtDrtJe1gxXnOS8Yi2BJJat6HuYClhTWM7We9ZGz8mkfW+klgQr3iJe1wPiCP
        xZKC88C6DLFhsJg84yXtYO3De2sc8odK2yE2iqeSlx5r/EI0N5E9wZoPvhe7TnZBWAnYLGkqMFRysYkm
        sqPQJBW3JSZIjhlhIkvqyo+SJa0NYTWfT5yW2Cx5mapnIgcoDGuQBiYKZ6G0KbxP8CaWkhEBhX4nbdZk
        /zFMcpE5JgrnkeShtym8D79ltn9ionBmS8owykQxYPjiIo1MVDlJJqioYxvKx7LQO0MkgyUjwFoTZctq
        ybUZUBLBg/xLjjRRNgyXXLMo7+J0n1uS99NOZKQM+6esPu/IxmQUAzZsOSl9Ms2boPAMCqlUVi/5Kmfi
        flkJQySV9Eb2ISMNqBX2+tmvWSHry6RwDiY1zsnea2eZKvRLfzeZPczpMs4WIEPoNMk5OBcvPOxCZAaj
        0g3JxV9Ivrgw4US1Cv/jOL7osNrl2JtytKwSWKCNkXyd4YsLBWIrkhHkpDyQk/eL25IPGfyGv3zdGSs5
        R7WA5h8n2Qw+KK9KbgRJk8fkNF5m2lVKlChRbSkr+wdsiufQLz1jagAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>